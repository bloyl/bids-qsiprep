{
  "name": "bids-app-template",
  "label": "<Bids-App-Template>: short human-friendly name/description displayed in interface",
  "description": "<editme Name> (<version>) longer description.",
  "version": "0.0.0_0.12.2",
  "custom": {
    "docker-image": "flywheel/bids-app-template:0.0.0_0.12.2",
    "gear-builder": {
      "category": "analysis",
      "image": "flywheel/bids-app-template:0.0.0_0.12.2"
    },
    "flywheel": {
      "suite": "BIDS Apps"
    },
    "license": {
      "non-commercial-use-only": false,
      "main": {
        "name": "BSD-3-Clause",
        "url": "https://github.com/poldracklab/mriqc/blob/0.15.1/LICENSE.txt"
      },
      "dependencies": [
        {
          "name": "Other",
          "url": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence"
        },
        {
          "name": "Other",
          "url": "https://github.com/ANTsX/ANTs/blob/v2.2.0/COPYING.txt"
        },
        {
          "name": "Other",
          "url": "https://afni.nimh.nih.gov/pub/dist/doc/program_help/README.copyright.html"
        }
      ]
    }
  },
  "inputs": {
    "key": {
      "base": "api-key",
      "read-only": true
    },
    "freesurfer_license": {
      "description": "FreeSurfer license file, provided during registration with FreeSurfer. This file will by copied to the $FSHOME directory and used during execution of the Gear.",
      "base": "file",
      "optional": true
    },
    "bidsignore": {
      "description": "A .bidsignore file to provide to the bids-validator that this gear runs before running the main command.",
      "base": "file",
      "optional": true
    },
    "recon-spec": {
      "description": "json file specifying a reconstruction pipeline to be run after preprocessing.",
      "base": "file",
      "optional": true
    },
    "eddy-config": {
      "description": "path to a json file with settings for the call to eddy. If no json is specified, a default one will be used. The current default json can be found here: https://github.com/PennBBL/qsiprep/blob/master/qsiprep/data/eddy_params.json",
      "type": "file",
      "optional": true
    }
  },
  
  
  "config": {
    "bids_app_args": {
      "description": "[arg1 [arg2 ...]]",
      "default": "",
      "type": "string"
    },
    "interactive-reports-only": {
      "description": "create interactive report json files on already preprocessed data.",
      "type": "boolean",
      "optional": true
    },
    "acquisition-type": {
      "description": "select a specific acquisition type to be processed.",
      "type": "string",
      "optional": true
    },
    "anat-only": {
      "description": "run anatomical workflows only.",
      "type": "boolean",
      "optional": true
    },
    "dwi-only": {
      "description": "ignore anatomical (T1w/T2w) data and process DWIs only.",
      "type": "boolean",
      "optional": true
    },
    "infant": {
      "description": "configure pipelines to process infant brains.",
      "type": "boolean",
      "optional": true
    },
    "boilerplate": {
      "description": "generate boilerplate only.",
      "type": "boolean",
      "optional": true
    },
    "longitudinal": {
      "description": "treat dataset as longitudinal - may increase runtime.",
      "type": "boolean",
      "optional": true
    },
    "b0-threshold": {
      "description": "any value in the .bval file less than this will be considered a b=0 image. Current default threshold = 100; this threshold can be lowered or increased. Note, setting this too high can result in inaccurate results.",
      "type": "number",
      "optional": true
    },
    "dwi-denoise-window": {
      "description": "window size in voxels for dwidenoise. Must be odd (default: 5). If 0, dwidwenoise will not be run.",
      "type": "integer",
      "optional": true
    },
    "unringing-method": {
      "description": "mrdegibbs: use mrdegibbs from mrtrix3",
      "type": "string",
      "enum": [
        "",
        "mrdegibbs"
      ],
      "optional": true
    },
    "dwi-no-biascorr": {
      "description": "skip b0-based dwi spatial bias correction.",
      "type": "boolean",
      "optional": true
    },
    "no-b0-harmonization": {
      "description": "skip re-scaling dwi scans to have matching b=0 intensities.",
      "type": "boolean",
      "optional": true
    },
    "denoise-after-combining": {
      "description": "run dwidenoise after combining dwis. Requires --combine-all-dwis.",
      "type": "boolean",
      "optional": true
    },
    "combine-all-dwis": {
      "description": "[DEPRECATED] combine dwis from across multiple runs for motion correction and reconstruction..",
      "type": "boolean",
      "optional": true
    },
    "separate-all-dwis": {
      "description": "don’t attempt to combine dwis from multiple runs. Each will be processed separately.",
      "type": "boolean",
      "optional": true
    },
    "distortion-group-merge": {
      "description": "Possible choices: concat, average, none\n  concatenate: append images in the 4th dimension\n  average: if a whole sequence was duplicated in both PE directions, average the corrected images of the same q-space coordinate\n  none: Default. Keep distorted groups separate",
      "type": "string",
      "enum": [
        "",
        "concatenate",
        "average"
      ],
      "optional": true
    },
    "write-local-bvecs": {
      "description": "write a series of voxelwise bvecs, relevant if writing preprocessed dwis to template space.",
      "type": "boolean",
      "optional": true
    },
    "output-space": {
      "description": "Volume and surface spaces to resample dwis into\n  T1w: subject anatomical volume\n  template: deprecated. Will be ignored",
      "type": "string",
      "enum": [
        "",
        "T1w",
        "template"
      ],
      "optional": true
    },
    "template": {
      "description": "volume template space (default: MNI152NLin2009cAsym)",
      "type": "string",
      "enum": [
        "",
        "MNI152NLin2009cAsym"
      ],
      "optional": true
    },
    "output-resolution": {
      "description": "the isotropic voxel size in mm the data will be resampled to after preprocessing. If set to a lower value than the original voxel size, your data will be upsampled using BSpline interpolation.",
      "type": "number",
      "optional": true
    },
    "b0-to-t1w-transform": {
      "description": "Degrees of freedom when registering b0 to T1w images. 6 degrees (rotation and translation) are used by default.",
      "type": "string",
      "enum": [
        "",
        "Rigid",
        "Affine"
      ],
      "optional": true
    },
    "intramodal-template-iters": {
      "description": "Number of iterations for finding the midpoint image from the b0 templates from all groups. Has no effect if there is only one group. If 0, all b0 templates are directly registered to the t1w image.",
      "type": "integer",
      "optional": true
    },
    "intramodal-template-transform": {
      "description": "Transformation used for building the intramodal template.",
      "type": "string",
      "enum": [
        "",
        "Rigid",
        "Affine",
        "BSplineSyN",
        "SyN"
      ],
      "optional": true
    },
    "b0-motion-corr-to": {
      "description": "align to the “first” b0 volume or do an “iterative” registration of all b0 images to their midpoint image (default: iterative)",
      "type": "string",
      "enum": [
        "",
        "iterative",
        "first"
      ],
      "optional": true
    },
    "hmc-transform": {
      "description": "transformation to be optimized during head motion correction (default: affine)",
      "type": "string",
      "enum": [
        "",
        "Affine",
        "Rigid"
      ],
      "optional": true
    },
    "hmc-model": {
      "description": "model used to generate target images for hmc. If “none” the non-b0 images will be warped using the same transform as their nearest b0 image. If “3dSHORE”, SHORELine will be used. If “eddy_ingress”, the dwis are assumed to have been run through fsls eddy.",
      "type": "string",
      "enum": [
        "",
        "3dSHORE",
        "eddy"
      ],
      "optional": true
    },
    "shoreline-iters": {
      "description": "number of SHORELine iterations. (default: 2)",
      "type": "integer",
      "optional": true
    },
    "impute-slice-threshold": {
      "description": "impute data in slices that are this many SDs from expected. If 0 (default), no slices will be imputed",
      "type": "number",
      "optional": true
    },
    "skull-strip-template": {
      "description": "select ANTs skull-stripping template (default: OASIS)",
      "type": "string",
      "enum": [
        "",
        "OASIS",
        "NKI"
      ],
      "optional": true
    },
    "skull-strip-fixed-seed": {
      "description": "do not use a random seed for skull-stripping - will ensure run-to-run replicability when used with –omp-nthreads 1",
      "type": "boolean",
      "optional": true
    },
    "skip-t1-based-spatial-normalization": {
      "description": "skip running the t1w-based normalization to template space. Default is to run the normalization.",
      "type": "boolean",
      "optional": true
    },
    "do-reconall": {
      "description": "Run the FreeSurfer recon-all pipeline",
      "type": "boolean",
      "optional": true
    },
    "prefer-dedicated-fmaps": {
      "description": "forces unwarping to use files from the fmap directory instead of using an RPEdir scan from the same session.",
      "type": "boolean",
      "optional": true
    },
    "fmap-bspline": {
      "description": "fit a B-Spline field using least-squares (experimental)",
      "type": "boolean",
      "optional": true
    },
    "fmap-no-demean": {
      "description": "do not remove median (within mask) from fieldmap (default: True)",
      "type": "boolean",
      "optional": true
    },
    "use-syn-sdc": {
      "description": "EXPERIMENTAL: Use fieldmap-free distortion correction. To use this option, “template” must be passed to –output-space",
      "type": "boolean",
      "optional": true
    },
    "force-syn": {
      "description": "EXPERIMENTAL/TEMPORARY: Use SyN correction in addition to fieldmap correction, if available",
      "type": "boolean",
      "optional": true
    },
    "reports-only": {
      "description": "only generate reports, don’t run workflows. This will only rerun report aggregation, not reportlet generation for specific nodes.",
      "type": "boolean",
      "optional": true
    },    
    
    
    
    "participant_label": {
      "description": "[PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]",
      "optional": true,
      "type": "string"
    },
    "run-id": {
      "description": "[RUN_ID [RUN_ID ...]]",
      "optional": true,
      "type": "string"
    },
    "task-id": {
      "description": "[TASK_ID [TASK_ID ...]]",
      "optional": true,
      "type": "string"
    },
    "modalities": {
      "description": "T1w|bold|T2w",
      "enum": [
        "",
        "T1w",
        "bold",
        "T2w"
      ],
      "optional": true,
      "type": "string"
    },
    "verbose": {
      "default": "v",
      "description": "increases log verbosity for each occurrence, debug level is -vvv",
      "enum": [
        "",
        "v",
        "vv",
        "vvv"
      ],
      "type": "string"
    },
    "n_cpus": {
      "description": "Number of CPUs/cores to use",
      "optional": true,
      "type": "integer"
    },
    "mem_gb": {
      "description": "Maximum memory to use (GB)",
      "optional": true,
      "type": "integer"
    },
    "write-graph": {
      "default": false,
      "description": "Write workflow graph",
      "type": "boolean"
    },
    "ignore": {
      "description": "Ignore selected aspects of the input dataset to disable corresponding parts of the workflow (a space delimited list)  Possible choices: fieldmaps, slicetiming, sbref",
      "default": "",
      "type": "string"
    },
    "gear-ignore-bids-errors": {
      "default": false,
      "description": "By default, the gear will not run if there are any BIDS errors detected.  Set this to run even if BIDS errors are detected",
      "type": "boolean"
    },
    "gear-log-level": {
      "default": "INFO",
      "description": "Gear Log verbosity level (INFO|DEBUG)",
      "type": "string",
                        "enum": [
                                "INFO",
                                "DEBUG"
                        ]
    },
    "gear-run-bids-validation": {
      "default": true,
      "description": "Gear will run BIDS validation after downloading data.  If validation fails <command> will NOT be run.",
      "type": "boolean"
    },
    "gear-save-intermediate-output": {
      "default": false,
      "description": "Gear will save ALL intermediate output into <command>_work.zip",
      "type": "boolean"
    },
    "gear-intermediate-files": {
      "description": "Space separated list of FILES to retain from the intermediate work directory.",
      "default": "",
      "type": "string"
    },
    "gear-intermediate-folders": {
      "description": "Space separated list of FOLDERS to retain from the intermediate work directory.",
      "default": "",
      "type": "string"
    },
    "gear-dry-run": {
      "default": false,
      "description": "Do everything except actually executing <command>",
      "type": "boolean"
    },
    "gear-keep-output": {
      "default": false,
      "description": "Don't delete output.  Output is always zipped into a single file for easy download.  Choose this option to prevent output deletion after zipping.",
      "type": "boolean"
    },
    "gear-FREESURFER_LICENSE": {
      "description": "Text from license file generated during FreeSurfer registration. *Entries should be space separated*",
      "type": "string",
      "optional": true
    }
  },
  "environment": {
    "PYTHONUNBUFFERED": "1"
  },
  "command": "/usr/local/miniconda/bin/python run.py",
  "author": "Dr. Smartypants, Whatsamatter U",
  "maintainer": "Flywheel <support@flywheel.io>",
  "cite": "Dewy, Cheetum, and How; The templatest BIDS app you will ever see; PLOS ONE 12(9):e0184661; doi:10.1371/journal.pone.0184661.",
  "license": "MIT",
  "source": "https://github.com/bids-apps/the-algorithm-run-by-the-gear",
  "url": "https://github.com/flywheel-apps/bids-app-template"
}
